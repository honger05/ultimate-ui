@mixin nowrap {
  max-width: 100%;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}
@mixin placehold-img {
  position: relative;
  & > span {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    z-index: $z-index-img;
    background-repeat: no-repeat;
    -webkit-background-size: cover;
  }
}
@mixin img {
  position: relative;
  & > span {
    display: block;
    width: 100%;
    height: 100%;
    z-index: $z-index-img;
    background-repeat: no-repeat;
    -webkit-background-size: cover;
  }
}
@mixin border-radius($border-color: $bordercolor,$border-radius: $border-radius-base,$border-before-radius: $border-radius-lg) {
  border: 1px solid $border-color;
  border-radius: $border-radius;
  @media screen and (-webkit-min-device-pixel-ratio: 2) {
    position: relative;
    border: 0;
    &:before {
      content: "";
      width: 200%;
      height: 200%;
      position: absolute;
      top: 0;
      left: 0;
      border: 1px solid $border-color;
      -webkit-transform: scale(.5);
      -webkit-transform-origin: 0 0;
      padding: 1px;
      -webkit-box-sizing: border-box;
      border-radius: $border-before-radius;
      pointer-events: none;
    }
  }
}
@mixin setTopLine($c: #C7C7C7) {
  content: " ";
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 1px;
  border-top: 1px solid $c;
  color: $c;
  transform-origin: 0 0;
  transform: scaleY(0.5);
}
@mixin setBottomLine($c: #C7C7C7) {
  content: " ";
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  height: 1px;
  border-bottom: 1px solid $c;
  color: $c;
  transform-origin: 0 100%;
  transform: scaleY(0.5);
}
@mixin setLeftLine($c: #C7C7C7) {
  content: " ";
  position: absolute;
  left: 0;
  top: 0;
  width: 1px;
  height: 100%;
  border-left: 1px solid $c;
  color: $c;
  transform-origin: 0 0;
  transform: scaleX(0.5);
}
@mixin setRightLine($c: #C7C7C7) {
  content: " ";
  position: absolute;
  right: 0;
  top: 0;
  width: 1px;
  height: 100%;
  border-right: 1px solid $c;
  color: $c;
  transform-origin: 100% 0;
  transform: scaleX(0.5);
}
@mixin ellipsis($w:auto) {
  width: $w;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
}
@mixin ellipsisLn($line) {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $line;
}
@mixin text_wrap() {
  word-wrap: break-word;
  word-break: break-all;
}
@mixin setChecked($c:#FFFFFF) {
  display: inline-block;
  content: '';
  width: 4px;
  height: 8px;
  border-bottom: 2px solid $c;
  border-right: 2px solid $c;
  transform: translate(0, 0) rotate(45deg);
}
@mixin setCheckedAbs($c:#FFFFFF) {
  position: absolute;
  top: 50%;
  left: 50%;
  content: '';
  width: 4px;
  height: 8px;
  border-bottom: 2px solid $c;
  border-right: 2px solid $c;
  transform: translate(-50%, -65%) rotate(45deg);
}
@mixin setTapColor($c:rgba(0,0,0,0)) {
  -webkit-tap-highlight-color: $c;
}
@mixin no_select() {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
@mixin arrow($borderWidth, $borderColor) {
   @include setArrowWidth($borderWidth);
  @include setArrowColor($borderColor);
}
@mixin setArrowColor($borderColor) {
  &.arrow_t {
    border-bottom-color: $borderColor;
  }
  &.arrow_r {
    border-left-color: $borderColor;
  }
  &.arrow_b {
    border-top-color: $borderColor;
  }
  &.arrow_l {
    border-right-color: $borderColor;
  }
}
@mixin setArrowWidth($borderWidth) {
  border-width: $borderWidth;
}
// @mixin setArrow($direction, $borderWidth, $borderColor) when ($direction = top) {
//   display: inline-block;
//   width: 0;
//   height: 0;
//   border-width: $borderWidth;
//   border-style: dashed;
//   border-color: transparent;
//   @include arrow_t($borderColor);
// }
// @mixin setArrow($direction, $borderWidth, $borderColor) when ($direction = right) {
//   display: inline-block;
//   width: 0;
//   height: 0;
//   border-width: $borderWidth;
//   border-style: dashed;
//   border-color: transparent;
//   @include arrow_r($borderColor);
// }
// @mixin setArrow($direction, $borderWidth, $borderColor) when ($direction = bottom) {
//   display: inline-block;
//   width: 0;
//   height: 0;
//   border-width: $borderWidth;
//   border-style: dashed;
//   border-color: transparent;
//   @include arrow_b($borderColor);
// }
// @mixin setArrow($direction, $borderWidth, $borderColor) when ($direction = left) {
//   display: inline-block;
//   width: 0;
//   height: 0;
//   border-width: $borderWidth;
//   border-style: dashed;
//   border-color: transparent;
//   @include arrow_l($borderColor);
// }
@mixin arrow_t($c) {
  border-top-width: 0;
  border-bottom-color: $c;
  border-bottom-style: solid;
}
@mixin arrow_r($c) {
  border-right-width: 0;
  border-left-color: $c;
  border-left-style: solid;
}
@mixin arrow_b($c) {
  border-bottom-width: 0;
  border-top-color: $c;
  border-top-style: solid;
}
@mixin arrow_l($c) {
  border-left-width: 0;
  border-right-color: $c;
  border-right-style: solid;
}
@mixin setArrowWidth_Wap($borderWidth) {
  border-width: $borderWidth $borderWidth 0 0;
}
@mixin setArrowSize_Wap($arrowsize) {
  height: $arrowsize;
  width: $arrowsize;
}
// @mixin setArrow_Wap($direction, $arrowsize, $borderColor,$borderWidth) when ($direction = top) {
//   display: inline-block;
//   @include transform(translate(0, 0) rotate(-45deg));
//   @include setArrowSize_Wap($arrowsize);
//   @include setArrowWidth_Wap($borderWidth);
//   border-color: $borderColor;
//   border-style: solid;
// }
// @mixin setArrow_Wap($direction, $arrowsize, $borderColor,$borderWidth) when ($direction = right) {
//   display: inline-block;
//   transform: rotate(45deg);
//   @include setArrowSize_Wap($arrowsize);
//   @include setArrowWidth_Wap($borderWidth);
//   border-color: $borderColor;
//   border-style: solid;
//   position: relative;
//   top: -2px;
// }
// @mixin setArrow_Wap($direction, $arrowsize, $borderColor,$borderWidth) when ($direction = down) {
//   display: inline-block;
//   transform: rotate(135deg);
//   @include setArrowSize_Wap($arrowsize);
//   @include setArrowWidth_Wap($borderWidth);
//   border-color: $borderColor;
//   border-style: solid;
//   position: relative;
//   top: -3px;
// }
// @mixin setArrow_Wap($direction, $arrowsize, $borderColor,$borderWidth) when ($direction = left) {
//   display: inline-block;
//   transform: rotate(-135deg);
//   @include setArrowSize_Wap($arrowsize);
//   @include setArrowWidth_Wap($borderWidth);
//   border-color: $borderColor;
//   border-style: solid;
//   position: relative;
//   top: -2px;
// }
